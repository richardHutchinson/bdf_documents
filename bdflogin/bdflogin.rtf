{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red237\green102\blue0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ql\qnatural

\f0\fs20 \cf0 This deliverable is intended to get you up to speed on how your language handles Session management.\'a0 Sessions are a sort of trick implemented in server-side languages to help their programmers not go crazy from trying to preserve state from one page to the next in a stateless environment.\
Sessions are handles differently from language to language, but generally the common theme is:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls1\ilvl0\cf0 {\listtext	1.	}The user requests a page on the site that would require some kind of persistent information, such as a log in form.\
{\listtext	2.	}The platform sets a cookie with an opaque (meaningless to an outsider) and unique value that the browser will send back on future requests.\'a0 This value is often called a 
\i nonce
\i0 .\
{\listtext	3.	}The platform uses that cookie value to identify the session and load and store information about it.\'a0 For example, a user ID is a common thing to store as session data.\
\pard\pardeftab720\sa280\ql\qnatural

\b\fs36 \cf0 Objectives\
\pard\pardeftab720\ql\qnatural

\b0\fs20 \cf0 Completing this deliverable will show that you understand:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}How server-side languages fake application state.\
{\listtext	\'95	}How to use session data in your chosen language.\
{\listtext	\'95	}How to work with Form (POST) data in your chosen language.\
\pard\pardeftab720\sa280\ql\qnatural

\b\fs36 \cf0 Resources and References\
\pard\pardeftab720\ql\qnatural

\b0\fs20 \cf0 Chapter 23 ("Using Session Control in PHP") of the Welling & Thomson book will be helpful for this assignment.\
Here's a general overview of how sessions work in server-side apps:\
\pard\pardeftab720\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://wddbs.com/go/server-side-sessions"}}{\fldrslt \cf2 http://wddbs.com/go/server-side-sessions}}\
And here's a PHP walk-through for creating log in and out functionality:\
\pard\pardeftab720\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://wddbs.com/go/php-auth-1"}}{\fldrslt \cf2 http://wddbs.com/go/php-auth-1}} : Skeleton App\
\pard\pardeftab720\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://wddbs.com/go/php-auth-2"}}{\fldrslt \cf2 http://wddbs.com/go/php-auth-2}} : Validation and Debugging\
\pard\pardeftab720\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://wddbs.com/go/php-auth-3"}}{\fldrslt \cf2 http://wddbs.com/go/php-auth-3}} : Session Management\
\pard\pardeftab720\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://wddbs.com/go/php-auth-4"}}{\fldrslt \cf2 http://wddbs.com/go/php-auth-4}} : Hashed Passwords\
\pard\pardeftab720\sa280\ql\qnatural

\b\fs36 \cf0 Instructions\
\pard\pardeftab720\ql\qnatural

\b0\fs20 \cf0 Build log in and log out functionality into your application.\'a0 Log in will traditionally be accomplished with a username or email address combined with a password.\'a0 Logging out usually just clears the session data from memory, and may or may not remove the session cookie. It is required for you to use session management to preserve sessions, hash your passwords, and scrub your inputs for security.\
Yep, that\'92s it.\'a0 That\'92s all you have to do.\
Of course, you\'92ll want to use the proper defensive coding and validation techniques that you\'92ve researched.\
\pard\pardeftab720\sa280\ql\qnatural

\b\fs36 \cf0 Deliverables\
\pard\pardeftab720\ql\qnatural

\b0\fs20 \cf0 Push your work to the shared Git repository.\'a0 Whatever is in the shared repository at midnight (EST) of the due date will be graded.\'a0 Late work will not be accepted.\
A full 10% of your grade for this deliverable is based on small, meaningful commits to Git.\'a0 Your log out page probably won\'92t have more than a single commit, but your log in page should have a few.\
Refer to the rubric on your References tab for grading information.\
\'a0\
\pard\pardeftab720\ql\qnatural

\b \cf0 You grade is based on:
\b0 \
Login: \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 15%\
Logout \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a015%\
Sessions: \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 15%\
Query Params: \'a0 \'a0 \'a015% \'a0 \'a0 \'a0(Are you coding against SQL Injection?)\
Form Parameters: \'a015%\
Design: \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 15% \'a0 \'a0 \'a0(Add CSS and Images)\
Commits: \'a0 \'a0 \'a0 \'a0 \'a0 \'a010% \'a0 \'a0 \'a0(You MUST submit and commit your code through GIT)\
}